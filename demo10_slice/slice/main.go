package main

import "fmt"

func main() {
	// 1. 切片的声明，不指定长度其他和数组一样，循环相同
	var arr1 []int                                           // 默认nil
	fmt.Printf("%v -- %T -- 长度：%v\n", arr1, arr1, len(arr1)) // [] -- []int -- 长度：0

	// 也可以使用下标赋值
	var arr2 = []int{1, 1: 2, 3}
	fmt.Printf("%v -- %T -- 长度：%v\n", arr2, arr2, len(arr2)) // [1 2 3] -- []int -- 长度：3

	// 基于数组的切片
	// 基于切片的切片同基于数组的切片
	a := [5]int{1, 2, 3, 4, 5}
	b := a[:]                                       // 左包右不包                           // 切片，引用数组的元素
	fmt.Printf("%v -- %T -- 长度：%v\n", b, b, len(b)) // [1 2 3 4 5] -- []int -- 长度：5

	// 获取切片的长度和容量
	// 切片的长度是切片中元素的个数，容量是切片底层数组的长度
	// 切片的容量是从切片的第一个元素开始，到底层数组的最后一个元素的长度
	c := b[1:3]                                 // 左包右不包
	fmt.Printf("长度：%v，容量：%v\n", len(c), cap(c)) // [2 3] -- 长度：2，容量：4
}
